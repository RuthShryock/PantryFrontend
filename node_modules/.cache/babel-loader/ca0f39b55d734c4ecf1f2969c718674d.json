{"ast":null,"code":"import { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = {\n  type: 'change'\n};\nconst _startEvent = {\n  type: 'start'\n};\nconst _endEvent = {\n  type: 'end'\n};\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    this.object = object;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.05;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    };\n\n    // Touch fingers\n    this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n    this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n    this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function () {\n      const offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    }();\n    this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    const scope = this;\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001;\n\n    // current position in spherical coordinates\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n    const panLeft = function () {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n    const panUp = function () {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = function () {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      }\n\n      //\n\n      addPointer(event);\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      removePointer(event);\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n\n    //\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n\n    // force an update at start\n\n    this.update();\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport { OrbitControls, MapControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","_changeEvent","type","_startEvent","_endEvent","OrbitControls","constructor","object","domElement","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","DOLLY_ROTATE","push","i","splice","undefined","pointer","passive","MapControls"],"sources":["C:/Users/qbarb/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}